apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "dev.diogocabral.webookmark"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental":"true",
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }

        if (project.rootProject.file('apikey.properties').exists()) {
            def apikeyPropertiesFile = rootProject.file("apikey.properties")
            def apikeyProperties = new Properties()
            apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))
            buildConfigField("String", "GOOGLE_BOOKS_API_KEY", apikeyProperties['GOOGLE_BOOKS_API_KEY'])
        } else {
            buildConfigField("String", "GOOGLE_BOOKS_API_KEY", System.getenv('GOOGLE_BOOKS_API_KEY'))
        }

        buildConfigField "String", "GOOGLE_BOOKS_API_URL", "\"https://www.googleapis.com/books/v1/\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'

    // Room
    def room_version = "2.2.3"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Coroutines
    def coroutines_version = "1.3.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Lifecycle
    def lifecycle_version = "2.1.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    // Koin
    def koin_version = "2.0.1"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    // Retrofit2
    def retrofit_version = "2.7.1"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:core:1.2.0'

    // Robolectric
    def robolectric_version = "4.3.1"
    testImplementation "org.robolectric:robolectric:$robolectric_version"

    // MockK
    def mockk_version = "1.9"
    testImplementation "io.mockk:mockk:$mockk_version"
}
